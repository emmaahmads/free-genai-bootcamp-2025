# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

services:
  multimodal-clip-embedding:
    image: opea/embedding-multimodal-clip:latest
    container_name: multimodal-clip-embedding-server
    ports:
      - "${MULTIMODAL_CLIP_EMBEDDER_PORT:-6990}:6990"
    ipc: host
    environment:
      no_proxy: ${no_proxy}
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
    healthcheck:
      test: ["CMD-SHELL", "sleep 30 && exit 0"]
      interval: 1s
      timeout: 35s
      retries: 1
    restart: unless-stopped
  ollama-server:
    image: ollama/ollama
    container_name: ollama-server
    ports:
      - ${LLM_ENDPOINT_PORT:-8008}:11434
    environment:
      no_proxy: ${no_proxy}
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      LLM_MODEL_ID: ${LLM_MODEL_ID}
      host_ip: ${host_ip}

# bias detection service
  guardrails-bias-detection-server:
    image: ${REGISTRY:-opea}/guardrails-bias-detection:${TAG:-latest}
    container_name: guardrails-bias-detection-server
    ports:
      - "${BIAS_DETECTION_PORT:-9092}:9092"
    ipc: host
    environment:
      no_proxy: ${no_proxy}
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      HUGGINGFACEHUB_API_TOKEN: ${HF_TOKEN}
    restart: unless-stopped

  clip-embedding-server:
    image: ${REGISTRY:-opea}/embedding:${TAG:-latest}
    container_name: clip-embedding-server
    ports:
      - ${EMBEDDER_PORT:-10203}:6000
    ipc: host
    environment:
      no_proxy: ${no_proxy}
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      CLIP_EMBEDDING_ENDPOINT: ${CLIP_EMBEDDING_ENDPOINT}
      EMBEDDING_COMPONENT_NAME: "OPEA_CLIP_EMBEDDING"
    depends_on:
      multimodal-clip-embedding:
        condition: service_healthy
    restart: unless-stopped

  pgvector-db:
    image: pgvector/pgvector:0.7.0-pg16
    container_name: pgvector-db
    hostname: db
    ports:
      - "${PGVECTOR_PORT:-5432}:5432"
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - ${VOLUMES_PATH:-./init.sql}:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
        test: pg_isready
        interval: 60s
        retries: 3
        start_period: 10s
        timeout: 10s

  retriever:
    image: ${REGISTRY:-opea}/retriever:${TAG:-latest}
    container_name: retriever-pgvector
    ports:
      - "${RETRIEVER_PORT:-7000}:7000"
    ipc: host
    environment:
      no_proxy: ${no_proxy}
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      INDEX_NAME: ${INDEX_NAME}
      HUGGINGFACEHUB_API_TOKEN: ${HF_TOKEN}
      LOGFLAG: ${LOGFLAG:-False}
      RETRIEVER_COMPONENT_NAME: ${RETRIEVER_COMPONENT_NAME:-OPEA_RETRIEVER_PGVECTOR}
      PG_CONNECTION_STRING: ${PG_CONNECTION_STRING}
    depends_on:
      pgvector-db:
        condition: service_healthy
    restart: unless-stopped    

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
      - "9411:9411"
    ipc: host
    environment:
      no_proxy: ${no_proxy}
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      COLLECTOR_ZIPKIN_HOST_PORT: 9411
    restart: unless-stopped
  
networks:
  default:
    driver: bridge
